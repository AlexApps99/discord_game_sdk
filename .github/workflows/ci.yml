name: Continuous Integration

on: [push, pull_request]

jobs:
  tests:
    name: Tests

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust:
          - stable

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Download Discord Game SDK
        shell: bash
        working-directory: ${{ runner.temp }}
        run: |
          curl -sO https://dl-game-sdk.discordapp.net/latest/discord_game_sdk.zip
          unzip ./discord_game_sdk.zip

      - name: Install LLVM and set LIBCLANG_PATH
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install llvm -y
          refreshenv
          echo "::set-env name=LIBCLANG_PATH::C:\Program Files\LLVM\bin"

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
        env:
          DISCORD_GAME_SDK_PATH: ${{ runner.temp }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          DISCORD_GAME_SDK_PATH: ${{ runner.temp }}

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          DISCORD_GAME_SDK_PATH: ${{ runner.temp }}

      - name: Check lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
        env:
          DISCORD_GAME_SDK_PATH: ${{ runner.temp }}
